{{- if and (.Values.workers.enabled) (include "airflow.executor.celery_like" .) }}
apiVersion: apps/v1
## StatefulSet gives workers consistent DNS names, allowing webserver access to log files
kind: StatefulSet
metadata:
  name: {{ include "airflow.fullname" . }}-worker
  {{- if .Values.workers.annotations }}
  annotations:
    {{- toYaml .Values.workers.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: worker
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.workers.labels }}
    {{- toYaml .Values.workers.labels | nindent 4 }}
    {{- end }}
spec:
  serviceName: "{{ include "airflow.fullname" . }}-worker"
  replicas: {{ .Values.workers.replicas }}
  updateStrategy:
    type: RollingUpdate
  ## we do not need to guarantee the order in which workers are scaled
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: worker
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-env: {{ include (print $.Template.BasePath "/config/configmap-env.yaml") . | sha256sum }}
        checksum/config-scripts: {{ include (print $.Template.BasePath "/config/configmap-scripts.yaml") . | sha256sum }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.workers.podAnnotations }}
        {{- toYaml .Values.workers.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.workers.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: worker
        release: {{ .Release.Name }}
        {{- if .Values.workers.podLabels }}
        {{- toYaml .Values.workers.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.workers.celery.gracefullTermination }}
      terminationGracePeriodSeconds: {{ add .Values.workers.terminationPeriod .Values.workers.celery.gracefullTerminationPeriod }}
      {{- else }}
      terminationGracePeriodSeconds: {{ .Values.workers.terminationPeriod }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if .Values.workers.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.workers.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.workers.affinity }}
      affinity:
        {{- toYaml .Values.workers.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.workers.tolerations }}
      tolerations:
        {{- toYaml .Values.workers.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.workers.securityContext }}
      securityContext:
        {{- toYaml .Values.workers.securityContext | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if or (.Values.airflow.extraPipPackages) (.Values.workers.extraPipPackages) }}
        - name: install-python-packages
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "pip"
            - "install"
            - "--target"
            - "/opt/python/site-packages"
            {{- range .Values.airflow.extraPipPackages }}
            - {{ . | quote }}
            {{- end }}
            {{- range .Values.workers.extraPipPackages }}
            - {{ . | quote }}
            {{- end }}
          volumeMounts:
            - name: python-site-packages
              mountPath: /opt/python/site-packages
        {{- end }}
        {{- include "airflow.init_container.wait_for_db_migrations" . | indent 8 }}
      containers:
        - name: airflow-worker
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          resources:
            {{- toYaml .Values.workers.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "airflow.fullname" . }}-env"
          env:
            {{- include "airflow.mapenvsecrets" . | indent 12 }}
            {{- if or (.Values.airflow.extraPipPackages) (.Values.workers.extraPipPackages) }}
            - name: PYTHONPATH
              value: /opt/python/site-packages
            {{- end }}
          {{- if and (include "airflow.executor.celery_like" .) (.Values.workers.celery.gracefullTermination) }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "timeout"
                  - "{{ .Values.workers.celery.gracefullTerminationPeriod }}s"
                  - "/home/airflow/scripts/graceful-stop-celery-worker.sh"
          {{- end }}
          ports:
            - name: wlog
              containerPort: 8793
              protocol: TCP
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "bash"
            - "-c"
            {{- if .Values.airflow.legacyCommands }}
            - "exec airflow worker"
            {{- else }}
            - "exec airflow celery worker"
            {{- end }}
          volumeMounts:
            {{- include "airflow.common.volumeMounts" . | indent 12 }}
            {{- if .Values.workers.secretsMap }}
            - name: {{ .Values.workers.secretsMap }}-volume
              readOnly: true
              mountPath: {{ .Values.workers.secretsDir }}
            {{- else }}
            {{- range .Values.workers.secrets }}
            - name: {{ . }}-volume
              readOnly: true
              mountPath: {{ $.Values.workers.secretsDir }}/{{ . }}
            {{- end }}
            {{- end }}
            {{- if or (.Values.airflow.extraPipPackages) (.Values.workers.extraPipPackages) }}
            - name: python-site-packages
              mountPath: /opt/python/site-packages
            {{- end }}
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" . | indent 8 }}
        {{- end }}
        {{- if .Values.airflow.extraContainers }}
        {{- toYaml .Values.airflow.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        {{- include "airflow.common.volumes" . | indent 8 }}
        {{- if .Values.workers.secretsMap }}
        - name: {{ .Values.workers.secretsMap }}-volume
          secret:
            secretName: {{ .Values.workers.secretsMap }}
        {{- else }}
        {{- range .Values.workers.secrets }}
        - name: {{ . }}-volume
          secret:
            secretName: {{ . }}
        {{- end }}
        {{- end }}
        {{- if or (.Values.airflow.extraPipPackages) (.Values.workers.extraPipPackages) }}
        - name: python-site-packages
          emptyDir: {}
        {{- end }}
{{- end }}
