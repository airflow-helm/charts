{{- $extraPipPackages := concat .Values.airflow.extraPipPackages .Values.flower.extraPipPackages }}
{{- if .Values.flower.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-flower
  {{- if .Values.flower.annotations }}
  annotations:
    {{- toYaml .Values.flower.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: flower
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.flower.labels }}
    {{- toYaml .Values.flower.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.flower.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple flower pods can safely run concurrently
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: flower
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret-config: {{ include (print $.Template.BasePath "/config/secret-config.yaml") . | sha256sum }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.flower.podAnnotations }}
        {{- toYaml .Values.flower.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.flower.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: flower
        release: {{ .Release.Name }}
        {{- if .Values.flower.podLabels }}
        {{- toYaml .Values.flower.podLabels | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      {{- if .Values.flower.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.flower.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.flower.affinity }}
      affinity:
        {{- toYaml .Values.flower.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.flower.tolerations }}
      tolerations:
        {{- toYaml .Values.flower.tolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if .Values.flower.securityContext }}
      securityContext:
        {{- toYaml .Values.flower.securityContext | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if $extraPipPackages }}
        {{- include "airflow.init_container.install_pip_packages" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages) | indent 8 }}
        {{- end }}
        {{- include "airflow.init_container.check_db" . | indent 8 }}
        {{- include "airflow.init_container.wait_for_db_migrations" . | indent 8 }}
      containers:
        - name: airflow-flower
          {{- include "airflow.image" . | indent 10 }}
          resources:
            {{- toYaml .Values.flower.resources | nindent 12 }}
          envFrom:
            {{- include "airflow.envFrom" . | indent 12 }}
          env:
            {{- if $extraPipPackages }}
            - name: PYTHONPATH
              value: /opt/python/site-packages
            {{- end }}
            {{- include "airflow.env" . | indent 12 }}
            {{- if .Values.flower.basicAuthSecret }}
            - name: AIRFLOW__CELERY__FLOWER_BASIC_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.flower.basicAuthSecret }}
                  key: {{ .Values.flower.basicAuthSecretKey }}
            {{- end }}
          ports:
            - name: flower
              containerPort: 5555
              protocol: TCP
          command:
            - "/usr/bin/dumb-init"
            - "--"
            - "bash"
            - "-c"
          args:
            {{- if .Values.airflow.legacyCommands }}
            - "exec airflow flower"
            {{- else }}
            - "exec airflow celery flower"
            {{- end }}
            {{- if .Values.flower.oauthDomains }}
            - "--auth"
            - {{ .Values.flower.oauthDomains | quote }}
            {{- end }}
          {{- if .Values.flower.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.flower.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.flower.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.flower.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.flower.readinessProbe.failureThreshold }}
            exec:
              command:
                - "/bin/bash"
                - "-c"
                {{- if or (.Values.flower.basicAuthSecret) (.Values.airflow.config.AIRFLOW__CELERY__FLOWER_BASIC_AUTH) }}
                - "exec curl --user $AIRFLOW__CELERY__FLOWER_BASIC_AUTH 'http://localhost:5555{{ .Values.airflow.config.AIRFLOW__CELERY__FLOWER_URL_PREFIX }}'"
                {{- else }}
                - "exec curl 'http://localhost:5555{{ .Values.airflow.config.AIRFLOW__CELERY__FLOWER_URL_PREFIX }}'"
                {{- end }}
          {{- end }}
          {{- if .Values.flower.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.flower.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.flower.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.flower.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.flower.livenessProbe.failureThreshold }}
            exec:
              command:
                - "/bin/bash"
                - "-c"
                {{- if or (.Values.flower.basicAuthSecret) (.Values.airflow.config.AIRFLOW__CELERY__FLOWER_BASIC_AUTH) }}
                - "exec curl --user $AIRFLOW__CELERY__FLOWER_BASIC_AUTH 'http://localhost:5555{{ .Values.airflow.config.AIRFLOW__CELERY__FLOWER_URL_PREFIX }}'"
                {{- else }}
                - "exec curl 'http://localhost:5555{{ .Values.airflow.config.AIRFLOW__CELERY__FLOWER_URL_PREFIX }}'"
                {{- end }}
          {{- end }}
          {{- $extraVolumeMounts := .Values.flower.extraVolumeMounts }}
          {{- $volumeMounts := include "airflow.volumeMounts" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumeMounts" $extraVolumeMounts) }}
          {{- if $volumeMounts }}
          volumeMounts:
            {{- $volumeMounts | indent 12 }}
          {{- end }}
      {{- $extraVolumes := .Values.flower.extraVolumes }}
      {{- $volumes := include "airflow.volumes" (dict "Release" .Release "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumes" $extraVolumes) }}
      {{- if $volumes }}
      volumes:
        {{- $volumes | indent 8 }}
      {{- end }}
{{- end }}
