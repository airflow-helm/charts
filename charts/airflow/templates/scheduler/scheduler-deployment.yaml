apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-scheduler
  {{- if .Values.scheduler.annotations }}
  annotations:
    {{- toYaml .Values.scheduler.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: scheduler
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.scheduler.labels }}
    {{- toYaml .Values.scheduler.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.scheduler.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple scheduler pods can safely run concurrently (in airflow 2.0+)
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: scheduler
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-env: {{ include (print $.Template.BasePath "/config/configmap-env.yaml") . | sha256sum }}
        checksum/config-pod-template: {{ include (print $.Template.BasePath "/config/configmap-pod-template.yaml") . | sha256sum }}
        checksum/config-scripts: {{ include (print $.Template.BasePath "/config/configmap-scripts.yaml") . | sha256sum }}
        checksum/config-scripts-git: {{ include (print $.Template.BasePath "/config/configmap-scripts-git.yaml") . | sha256sum }}
        checksum/config-variables-pools: {{ include (print $.Template.BasePath "/config/configmap-variables-pools.yaml") . | sha256sum }}
        checksum/secret-connections: {{ include (print $.Template.BasePath "/config/secret-connections.yaml") . | sha256sum }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.scheduler.podAnnotations }}
        {{- toYaml .Values.scheduler.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.scheduler.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: scheduler
        release: {{ .Release.Name }}
        {{- if .Values.scheduler.podLabels }}
        {{- toYaml .Values.scheduler.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.scheduler.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.scheduler.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.affinity }}
      affinity:
        {{- toYaml .Values.scheduler.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.tolerations }}
      tolerations:
        {{- toYaml .Values.scheduler.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.securityContext }}
      securityContext:
        {{- toYaml .Values.scheduler.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      initContainers:
        {{- if or (.Values.airflow.extraPipPackages) (.Values.scheduler.extraPipPackages) }}
        - name: install-python-packages
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "pip"
            - "install"
            - "--target"
            - "/opt/python/site-packages"
            {{- range .Values.airflow.extraPipPackages }}
            - {{ . | quote }}
            {{- end }}
            {{- range .Values.scheduler.extraPipPackages }}
            - {{ . | quote }}
            {{- end }}
          volumeMounts:
            - name: python-site-packages
              mountPath: /opt/python/site-packages
        {{- end }}
        {{- include "airflow.init_container.wait_for_db_migrations" . | indent 8 }}
        {{- if .Values.dags.initContainer.enabled }}
        {{- include "airflow.init_container.git_clone" . | indent 8 }}
        {{- end }}
        {{- if .Values.scheduler.extraInitContainers }}
        {{- toYaml .Values.scheduler.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: airflow-scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          resources:
            {{- toYaml .Values.scheduler.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "airflow.fullname" . }}-env"
          env:
            {{- include "airflow.mapenvsecrets" . | indent 12 }}
            {{- if or (.Values.airflow.extraPipPackages) (.Values.scheduler.extraPipPackages) }}
            - name: PYTHONPATH
              value: /opt/python/site-packages
            {{- end }}
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "bash"
            - "-c"
            - >
              true \
               && mkdir -p /home/airflow/.local/bin \
               && export PATH="/home/airflow/.local/bin:$PATH" \
              {{- if .Values.dags.installRequirements }}
               && echo "*** installing requirements..." \
               && /home/airflow/scripts/install-requirements.sh \
              {{- end }}
              {{- if .Values.scheduler.variables }}
               && echo "*** adding Airflow variables..." \
               && airflow variables import /home/airflow/variables-pools/variables.json || airflow variables -i /home/airflow/variables-pools/variables.json \
              {{- end }}
              {{- if or (.Values.scheduler.connections) (.Values.scheduler.existingSecretConnections) }}
               && echo "*** adding Airflow connections..." \
               && /home/airflow/connections/add-connections.sh \
              {{- end }}
              {{- if .Values.scheduler.pools }}
               && echo "*** adding Airflow pools..." \
               && airflow pools import /home/airflow/variables-pools/pools.json || airflow pool -i /home/airflow/variables-pools/pools.json \
              {{- end }}
               && echo "*** running scheduler..." \
               && exec airflow scheduler -n {{ .Values.scheduler.numRuns }}
          {{- if .Values.scheduler.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.scheduler.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.scheduler.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.scheduler.livenessProbe.failureThreshold }}
            exec:
              command:
              - python
              - -Wignore
              - -c
              - |
                import os
                import sys

                from airflow.jobs.scheduler_job import SchedulerJob
                from airflow.utils.db import create_session
                from airflow.utils.net import get_hostname

                os.environ['AIRFLOW__CORE__LOGGING_LEVEL'] = 'ERROR'
                os.environ['AIRFLOW__LOGGING__LOGGING_LEVEL'] = 'ERROR'

                with create_session() as session:
                    job = session.query(SchedulerJob) \
                        .filter_by(hostname=get_hostname()) \
                        .order_by(SchedulerJob.latest_heartbeat.desc()) \
                        .limit(1) \
                        .first()

                sys.exit(0 if job.is_alive() else 1)
          {{- end }}
          volumeMounts:
            {{- include "airflow.common.volumeMounts" . | indent 12 }}
            {{- if .Values.scheduler.secretsMap }}
            - name: {{ .Values.scheduler.secretsMap }}-volume
              mountPath: {{ .Values.scheduler.secretsDir }}
              readOnly: true
            {{- else }}
            {{- range .Values.scheduler.secrets }}
            - name: {{ . }}-volume
              mountPath: {{ $.Values.scheduler.secretsDir }}/{{ . }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if or (.Values.scheduler.connections) (.Values.scheduler.existingSecretConnections) }}
            - name: connections
              mountPath: /home/airflow/connections
              readOnly: true
            {{- end }}
            {{- if or (.Values.scheduler.variables) (.Values.scheduler.pools) }}
            - name: variables-pools
              mountPath: /home/airflow/variables-pools/
              readOnly: true
            {{- end }}
            {{- if or (.Values.airflow.extraPipPackages) (.Values.scheduler.extraPipPackages) }}
            - name: python-site-packages
              mountPath: /opt/python/site-packages
            {{- end }}
            {{- if (include "airflow.executor.kubernetes_like" .) }}
            - name: pod-template
              mountPath: /home/airflow/pod_templates/pod_template.yaml
              subPath: pod_template.yaml
              readOnly: true
            {{- end }}
        {{- if .Values.dags.git.gitSync.enabled }}
        {{- include "airflow.container.git_sync" . | indent 8 }}
        {{- end }}
        {{- if .Values.airflow.extraContainers }}
        {{- toYaml .Values.airflow.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        {{- include "airflow.common.volumes" . | indent 8 }}
        {{- if .Values.scheduler.secretsMap }}
        - name: {{ .Values.scheduler.secretsMap }}-volume
          secret:
            secretName: {{ .Values.scheduler.secretsMap }}
        {{- else }}
        {{- range .Values.scheduler.secrets }}
        - name: {{ . }}-volume
          secret:
            secretName: {{ . }}
        {{- end }}
        {{- end }}
        {{- if or (.Values.scheduler.connections) (.Values.scheduler.existingSecretConnections) }}
        - name: connections
          secret:
            secretName: |-
              {{- if .Values.scheduler.existingSecretConnections }}
              {{ .Values.scheduler.existingSecretConnections }}
              {{- else }}
              {{ include "airflow.fullname" . }}-connections
              {{- end }}
            defaultMode: 0755
        {{- end }}
        {{- if or (.Values.scheduler.variables) (.Values.scheduler.pools) }}
        - name: variables-pools
          configMap:
            name: {{ include "airflow.fullname" . }}-variables-pools
            defaultMode: 0755
        {{- end }}
        {{- if or (.Values.airflow.extraPipPackages) (.Values.scheduler.extraPipPackages) }}
        - name: python-site-packages
          emptyDir: {}
        {{- end }}
        {{- if (include "airflow.executor.kubernetes_like" .) }}
        - name: pod-template
          configMap:
            name: {{ include "airflow.fullname" . }}-pod-template
        {{- end }}