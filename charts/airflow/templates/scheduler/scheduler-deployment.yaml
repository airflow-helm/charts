{{- $extraPipPackages := concat .Values.airflow.extraPipPackages .Values.scheduler.extraPipPackages }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-scheduler
  {{- if .Values.scheduler.annotations }}
  annotations:
    {{- toYaml .Values.scheduler.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: scheduler
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.scheduler.labels }}
    {{- toYaml .Values.scheduler.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.scheduler.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple scheduler pods can safely run concurrently (in airflow 2.0+)
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: scheduler
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-env: {{ include (print $.Template.BasePath "/config/configmap-env.yaml") . | sha256sum }}
        checksum/config-pod-template: {{ include (print $.Template.BasePath "/config/configmap-pod-template.yaml") . | sha256sum }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.scheduler.podAnnotations }}
        {{- toYaml .Values.scheduler.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.scheduler.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: scheduler
        release: {{ .Release.Name }}
        {{- if .Values.scheduler.podLabels }}
        {{- toYaml .Values.scheduler.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.scheduler.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.scheduler.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.affinity }}
      affinity:
        {{- toYaml .Values.scheduler.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.tolerations }}
      tolerations:
        {{- toYaml .Values.scheduler.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.securityContext }}
      securityContext:
        {{- toYaml .Values.scheduler.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      initContainers:
        {{- if $extraPipPackages }}
        {{- include "airflow.init_container.install_pip_packages" (dict "Values" .Values "extraPipPackages" $extraPipPackages) | indent 8 }}
        {{- end }}
        {{- include "airflow.init_container.wait_for_db_migrations" . | indent 8 }}
        {{- if .Values.scheduler.extraInitContainers }}
        {{- toYaml .Values.scheduler.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: airflow-scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          resources:
            {{- toYaml .Values.scheduler.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "airflow.fullname" . }}-env"
          env:
            {{- include "airflow.common.env" . | indent 12 }}
            {{- if $extraPipPackages }}
            - name: PYTHONPATH
              value: /opt/python/site-packages
            {{- end }}
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "bash"
            - "-c"
            - "exec airflow scheduler -n {{ .Values.scheduler.numRuns }}"
          {{- if .Values.scheduler.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.scheduler.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.scheduler.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.scheduler.livenessProbe.failureThreshold }}
            exec:
              command:
              - "python"
              - "-Wignore"
              - "-c"
              - |-
                import os
                import sys

                from airflow.jobs.scheduler_job import SchedulerJob
                from airflow.utils.db import create_session
                from airflow.utils.net import get_hostname

                os.environ['AIRFLOW__CORE__LOGGING_LEVEL'] = 'ERROR'
                os.environ['AIRFLOW__LOGGING__LOGGING_LEVEL'] = 'ERROR'

                with create_session() as session:
                    job = session.query(SchedulerJob) \
                        .filter_by(hostname=get_hostname()) \
                        .order_by(SchedulerJob.latest_heartbeat.desc()) \
                        .limit(1) \
                        .first()

                sys.exit(0 if job.is_alive() else 1)
          {{- end }}
          {{- $extraVolumeMounts := .Values.scheduler.extraVolumeMounts }}
          {{- $volumeMounts := include "airflow.volumeMounts" (dict "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumeMounts" $extraVolumeMounts) }}
          {{- if or ($volumeMounts) (include "airflow.executor.kubernetes_like" .) }}
          volumeMounts:
            {{- $volumeMounts | indent 12 }}
            {{- if (include "airflow.executor.kubernetes_like" .) }}
            - name: pod-template
              mountPath: /home/airflow/pod_templates/pod_template.yaml
              subPath: pod_template.yaml
              readOnly: true
            {{- end }}
          {{- end }}
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" . | indent 8 }}
        {{- end }}
        {{- if .Values.airflow.extraContainers }}
        {{- toYaml .Values.airflow.extraContainers | nindent 8 }}
        {{- end }}
      {{- $extraVolumes := .Values.scheduler.extraVolumes }}
      {{- $volumes := include "airflow.volumes" (dict "Values" .Values "extraPipPackages" $extraPipPackages "extraVolumes" $extraVolumes) }}
      {{- if or ($volumes) (include "airflow.executor.kubernetes_like" .) }}
      volumes:
        {{- $volumes | indent 8 }}
        {{- if (include "airflow.executor.kubernetes_like" .) }}
        - name: pod-template
          configMap:
            name: {{ include "airflow.fullname" . }}-pod-template
        {{- end }}
      {{- end }}